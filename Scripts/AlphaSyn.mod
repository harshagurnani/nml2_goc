TITLE Mod file for component: Component(id=AlphaSyn type=alphaCurrentSynapse)

COMMENT

    This NEURON file has been generated by org.neuroml.export (see https://github.com/NeuroML/org.neuroml.export)
         org.neuroml.export  v1.5.4
         org.neuroml.model   v1.5.4
         jLEMS               v0.9.9.1

ENDCOMMENT

NEURON {
    POINT_PROCESS AlphaSyn
    RANGE tau                               : parameter
    RANGE ibase                             : parameter
    
    RANGE i                                 : exposure
    
    
    NONSPECIFIC_CURRENT i 
    
}

UNITS {
    
    (nA) = (nanoamp)
    (uA) = (microamp)
    (mA) = (milliamp)
    (A) = (amp)
    (mV) = (millivolt)
    (mS) = (millisiemens)
    (uS) = (microsiemens)
    (molar) = (1/liter)
    (kHz) = (kilohertz)
    (mM) = (millimolar)
    (um) = (micrometer)
    (umol) = (micromole)
    (S) = (siemens)
    
}

PARAMETER {
    
    tau = 30 (ms)
    ibase = 0.2 (nA)
}

ASSIGNED {
    ? Standard Assigned variables with baseSynapse
    v (mV)
    celsius (degC)
    temperature (K)
    
    i (nA)                                 : derived variable
    rate_I (nA/ms)
    rate_J (nA/ms)
    
}

STATE {
    I (nA) 
    J (nA) 
    
}

INITIAL {
    temperature = celsius + 273.15
    
    rates()
    rates() ? To ensure correct initialisation.
    
    I = 0
    
    J = 0
    
}

BREAKPOINT {
    
    SOLVE states METHOD cnexp
    
    
}

NET_RECEIVE(weight) {
    
    : paramMappings . : {AlphaSyn={I=I, J=J, tau=tau, ibase=ibase, i=i}}
    : state_discontinuity(J, J  + weight *  ibase) : From AlphaSyn
    J = J  + weight *  ibase : From AlphaSyn
    
}

DERIVATIVE states {
    rates()
    I' = rate_I 
    J' = rate_J 
    
}

PROCEDURE rates() {
    
    i = -1 * I ? evaluable
    rate_I = (2.7182818284590451*  J   -   I  )/  tau ? Note units of all quantities used here need to be consistent!
    rate_J = -  J  /  tau ? Note units of all quantities used here need to be consistent!
    
     
    
}

